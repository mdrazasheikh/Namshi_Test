{"version":3,"sources":["../../src/middleware/errorHandler.js"],"names":["errorHandler","ctx","next","status","throw","err","statusCode","message","errors","InvalidRequest","code","hasOwnProperty","response","body","_","isEmpty","error"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;;;AAMA,MAAMA,eAAe,OAAOC,GAAP,EAAYC,IAAZ,KAAqB;AACtC,QAAI;AACA,cAAMA,MAAN;AACA,YAAID,IAAIE,MAAJ,KAAe,GAAnB,EAAwB;AACpBF,gBAAIG,KAAJ,CAAU,GAAV;AACH;AACJ,KALD,CAMA,OAAOC,GAAP,EAAY;AACR,YAAIC,UAAJ,EAAgBC,OAAhB,EAAyBC,MAAzB;AACA,YAAIH,eAAeI,uBAAnB,EAAmC;AAC/BH,yBAAaD,IAAIK,IAAjB;AACAF,qBAASH,IAAIG,MAAb;AACAD,sBAAUF,IAAIE,OAAd;AACH,SAJD,MAIO;AACHD,yBAAaD,IAAIC,UAAJ,IAAkBD,IAAIF,MAAtB,IAAgC,GAA7C;;AAEA,gBAAIE,IAAIM,cAAJ,CAAmB,UAAnB,CAAJ,EAAoC;AAChCJ,0BAAUF,IAAIO,QAAJ,CAAaC,IAAvB;AACH,aAFD,MAEO,IAAIR,IAAIM,cAAJ,CAAmB,SAAnB,CAAJ,EAAmC;AACtCJ,0BAAUF,IAAIE,OAAd;AACH,aAFM,MAEA;AACHA,0BAAU,yBAAV;AACH;AACJ;;AAED,YAAIM,OAAO;AACPH,kBAAMJ,UADC;AAEPC,qBAASA;AAFF,SAAX;;AAKA,YAAI,CAACO,iBAAEC,OAAF,CAAUP,MAAV,CAAL,EAAwB;AACpBK,iBAAKG,KAAL,GAAaR,MAAb;AACH;AACDP,YAAIE,MAAJ,GAAaG,UAAb;AACAL,YAAIY,IAAJ,GAAWA,IAAX;AACH;AACJ,CApCD;;kBAsCeb,Y","file":"errorHandler.js","sourcesContent":["import _ from 'lodash';\nimport {InvalidRequest} from \"../exceptions/request\";\n\n/**\n * Error handler middleware\n * @param ctx\n * @param next\n * @return {Promise<void>}\n */\nconst errorHandler = async (ctx, next) => {\n    try {\n        await next();\n        if (ctx.status === 404) {\n            ctx.throw(404);\n        }\n    }\n    catch (err) {\n        let statusCode, message, errors;\n        if (err instanceof InvalidRequest) {\n            statusCode = err.code;\n            errors = err.errors;\n            message = err.message;\n        } else {\n            statusCode = err.statusCode || err.status || 500;\n\n            if (err.hasOwnProperty('response')) {\n                message = err.response.body;\n            } else if (err.hasOwnProperty('message')) {\n                message = err.message;\n            } else {\n                message = 'Something went wrong !!';\n            }\n        }\n\n        let body = {\n            code: statusCode,\n            message: message\n        };\n\n        if (!_.isEmpty(errors)) {\n            body.error = errors;\n        }\n        ctx.status = statusCode;\n        ctx.body = body;\n    }\n};\n\nexport default errorHandler;"]}